name: Windows Build

on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full

jobs:
  build-win:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      # 1. Checkout source with submodules
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # 2. Rust toolchain
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        name: Setup rust toolchain

      # 3. Node 22 + pnpm 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable Corepack & pin pnpm 10
        shell: pwsh
        run: |
          corepack enable
          corepack prepare pnpm@10 --activate

      # 4. Cache pnpm store (after pnpm is available)
      - name: Detect pnpm store path
        id: pnpm-store-path
        shell: pwsh
        run: |
          $store = pnpm store path --silent
          if (-not (Test-Path $store)) { New-Item -ItemType Directory -Force -Path $store | Out-Null }
          echo "store_path=$store" | Out-File -Encoding utf8 -Append $env:GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store-path.outputs.store_path }}
          key: windows-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: windows-pnpm-

      # 5. Install tauriâ€‘cli (prebuilt)
      - uses: taiki-e/install-action@v2
        with:
          tool: tauri-cli@2

      # 6. Build & bundle
      - name: Tauri build
        shell: pwsh
        run: cargo tauri build --ci

      # 7. Upload Windows artifacts (.msi / setup.exe)
      - uses: actions/upload-artifact@v4
        with:
          name: tauri-windows
          path: target/**/bundle/**/*
