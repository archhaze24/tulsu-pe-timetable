name: Windows Build

on:
  push: { branches: [ main ], tags: [ 'v*.*.*' ] }
  pull_request: { branches: [ main ] }

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full
  CARGO_TARGET_DIR: ${{ github.workspace }}/target   # <-- один каталог для chef и release

jobs:
  build-win:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      # 1 Checkout
      - uses: actions/checkout@v4
        with: { submodules: recursive }

      # 2 Rust toolchain + cache
      - uses: actions-rs/toolchain@v1
        with: { profile: minimal, toolchain: stable, override: true }

      - uses: Swatinem/rust-cache@v2     # кэширует ~/.cargo + target/*
        with:
          prefix-key: v0-tauri-win

      # 3 Node 22 + PNPM 10 (автокеш)
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable Corepack & pin pnpm 10
        run: |
          corepack enable
          corepack prepare pnpm@10 --activate
          pnpm -v
        shell: pwsh

      - name: Install JS dependencies
        run: pnpm install --frozen-lockfile --prefer-offline
        shell: pwsh

      # 5 cargo-chef (предсобранный бинарь через cargo-binstall)
      - uses: taiki-e/install-action@v2
        with: { tool: cargo-binstall }

      - name: Pre-compile Rust deps (cargo-chef)
        run: |
          cargo binstall cargo-chef@0.1 --no-confirm --log-level warn
          cargo chef prepare --recipe-path recipe.json
          cargo chef cook   --recipe-path recipe.json --release --target-dir "$env:CARGO_TARGET_DIR"
        shell: pwsh

      # 6 tauri-cli (prebuilt)
      - uses: taiki-e/install-action@v2
        with: { tool: tauri-cli@2 }

      # 7 Build & bundle
      - name: Tauri build
        run: cargo tauri build --ci
        shell: pwsh

      # 8 Upload artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: tauri-windows
          path: ${{ env.CARGO_TARGET_DIR }}/**/bundle/**/*
